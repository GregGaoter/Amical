#spring.datasource.url=jdbc:postgresql://localhost:5432/db_amical
spring.datasource.url=jdbc:postgresql://drona.db.elephantsql.com:5432/xsfqhdol
#spring.datasource.username=postgres
spring.datasource.username=xsfqhdol
spring.datasource.password=Zit_ZbRXU4C2OeT9B9jJt6sB4-ptnflt
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=false
# Propriété à enlever en production
# En production, enlever également le fichier import.sql à la racine du classpath
# Ce fichier script est automatiquement exécuter par Hibernate si cette propriété est sur create
# spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# This will disable OSIV (Open Session in View) so that you can handle the LazyInitializationException the right way.
# Si cette propriété est à true, une LazyInitializationException est levée sur les PersistentSet de type @OneToMany du model.
spring.jpa.open-in-view=false

spring.thymeleaf.cache=false

# Logging
logging.file=logs/spring_boot_logger.log

# Intermediate location of uploaded files.
# spring.servlet.multipart.location= ${java.io.tmpdir}
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# URL d'accès aux plans
# Les images des plans sont stockées sur le serveur web nginx
# repertoire.plan=java.io.tmpdir,amical
url.serveur.plan=http://localhost:80/img/plan/

repertoire.local.plan=C:\\Users\\gregg\\Documents\\executables\\nginx\\nginx-1.17.8\\html\\img\\plan\\
